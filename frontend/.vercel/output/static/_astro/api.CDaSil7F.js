var u={exports:{}},c={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var h;function p(){if(h)return c;h=1;var e=Symbol.for("react.transitional.element"),t=Symbol.for("react.fragment");function o(s,r,a){var l=null;if(a!==void 0&&(l=""+a),r.key!==void 0&&(l=""+r.key),"key"in r){a={};for(var i in r)i!=="key"&&(a[i]=r[i])}else a=r;return r=a.ref,{$$typeof:e,type:s,key:l,ref:r!==void 0?r:null,props:a}}return c.Fragment=t,c.jsx=o,c.jsxs=o,c}var x;function $(){return x||(x=1,u.exports=p()),u.exports}var m=$();const d="http://localhost:3000/api";async function n(e,t={}){const o=`${d}${e}`;console.log(`Intentando conectar a: ${o}`);try{const s=await fetch(o,{...t,mode:"cors",headers:{...t.headers,"Content-Type":"application/json"}});if(!s.ok){console.error(`Error en respuesta API (${s.status}): ${s.statusText}`);const a=await s.text();throw console.error(`Detalles del error: ${a}`),new Error(`Error API: ${s.statusText}`)}const r=await s.json();return console.log(`Respuesta exitosa de ${o}:`,r),r}catch(s){throw console.error(`Error al conectar con ${o}:`,s),s}}const A={getAll:()=>n("/streamers"),getTop:(e=10)=>n(`/streamers/top?limit=${e}`),getByName:e=>n(`/streamers/${e}`),getGrowth:(e,t=7)=>n(`/streamers/${e}/growth?days=${t}`),getAllGrowth:(e=7)=>n(`/streamers/growth/all?days=${e}`),getAdvancedStats:(e,t="7d")=>n(`/streamers/${e}/advanced-stats?time_range=${t}`)};async function E(){try{try{const t=await fetch(`${d}/health`,{mode:"cors",headers:{"Content-Type":"application/json"}});if(t.ok){const o=await t.json();return console.log("API health check exitoso:",o),{success:!0,message:"Conexión exitosa con la API",data:o}}}catch{console.log("Health check falló, intentando con otro endpoint...")}const e=await fetch(`${d}/streamers/top?limit=1`,{mode:"cors",headers:{"Content-Type":"application/json"}});if(e.ok){const t=await e.json();return console.log("Conexión exitosa con la API:",t),{success:!0,message:"Conexión exitosa con la API",data:t}}else{const t=await e.text();return console.error(`Error en respuesta API (${e.status}): ${t}`),{success:!1,message:`Error en la respuesta: ${e.status} ${e.statusText}`,details:t}}}catch(e){return console.error("Error al conectar con la API:",e),{success:!1,message:`Error de conexión: ${e.message}`,details:e.toString()}}}export{A as S,m as j,E as t};
