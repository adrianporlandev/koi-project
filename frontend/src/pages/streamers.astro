---
import Layout from '../layouts/Layout.astro';
import { StreamersAPI } from '../lib/api';
import StreamerCard from '../components/StreamerCard.jsx';

// Obtener los streamers más populares con manejo de errores mejorado
interface Streamer {
  id: number;
  streamer_name: string;
  [key: string]: any; // Adjust this based on the actual structure of the streamer object
}

let topStreamers: Streamer[] = [];
let error = null;

try {
  console.log("Intentando obtener streamers populares...");
  topStreamers = await StreamersAPI.getTop(24);
  console.log("Streamers obtenidos:", topStreamers);
  
  // Verificar si los datos son los de fallback
  if (topStreamers.length === 1 && topStreamers[0].streamer_name === 'Ejemplo') {
    error = "No se pudieron cargar los datos reales de streamers.";
  }
} catch (err) {
  console.error("Error al cargar streamers:", err);
  error = `Error al cargar streamers: ${(err as Error).message}`;
}
---

<Layout title="Streamers - tw Stats">
  <div class="container mx-auto px-4 py-12">
    <h1 class="text-3xl font-bold text-gray-800 mb-8">Streamers Populares</h1>
    
    {error && (
      <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative mb-8" role="alert">
        <strong class="font-bold">Atención:</strong>
        <span class="block sm:inline"> {error}</span>
        <p class="mt-2">
          Verifica la conexión con la API y asegúrate de que el servidor esté funcionando correctamente.
          <a href="/diagnostico" class="underline font-medium">Ir a la página de diagnóstico</a>
        </p>
      </div>
    )}
    
    {topStreamers.length === 0 ? (
      <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative" role="alert">
        <strong class="font-bold">Atención:</strong>
        <span class="block sm:inline"> No se encontraron streamers. Verifica que la API esté en funcionamiento.</span>
      </div>
    ) : (
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
        {topStreamers.map(streamer => (
          <StreamerCard streamer={streamer} />
        ))}
      </div>
    )}
  </div>
</Layout>

